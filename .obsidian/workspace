{
  "main": {
    "id": "7dc55e656384becb",
    "type": "split",
    "children": [
      {
        "id": "e8834e1cfafe1fdb",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "发布/项目开发/vue云笔记/手写Eventbus.md",
            "mode": "source",
            "backlinks": true,
            "source": false
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "8a107c5aa545c915",
    "type": "split",
    "children": [
      {
        "id": "17b8e108bdecd070",
        "type": "tabs",
        "children": [
          {
            "id": "3f92cb66962e29d0",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "a480dfbc51b894a9",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "\"export default class EventEmitter { static eventObject: any   events: any   constructor() { this.init() }   init() { if (!EventEmitter.eventObject) { EventEmitter.eventObject = Object.create(null) this.events = EventEmitter.eventObject } }   on(target: string, handle: (value:any) => void) { this.events[target] = this.events[target] || new Array() this.events[target].push(handle) return this }   off(target: string, handle: (value: any) => void) { this.events[target] = this.events[target].filter((func: () => void) => func !== handle) return this }   emit(target: string, ...args: any) { this.events[target].map((handle: () => void) => { handle.apply(null, args) }) return this }   once(target: string, handle: (value: any) => void) { const wrapper = (...args: any) => { this.off(target, wrapper) handle.apply(this, args) } this.on(target, wrapper) return this }  }\"",
                "matchingCase": true,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 451
  },
  "right": {
    "id": "9cf0cee3dc189f37",
    "type": "split",
    "children": [
      {
        "id": "20d30fa2e2824d82",
        "type": "tabs",
        "children": [
          {
            "id": "f231dfacc286ec81",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "发布/项目开发/vue云笔记/手写Eventbus.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "ae373e01920499d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "发布/项目开发/vue云笔记/手写Eventbus.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "98035f387bc758ac",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "21173831846ae5b8",
            "type": "leaf",
            "state": {
              "type": "advanced-tables-toolbar",
              "state": {}
            }
          },
          {
            "id": "ea73a247d7db6265",
            "type": "leaf",
            "state": {
              "type": "calendar",
              "state": {}
            }
          }
        ],
        "currentTab": 3
      },
      {
        "id": "0c0ad2dfe899560c",
        "type": "tabs",
        "children": [
          {
            "id": "4e5b6c780dfdf274",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "面试/vue/未命名.md",
                "mode": "source",
                "backlinks": true,
                "source": true
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 100
  },
  "active": "e8834e1cfafe1fdb",
  "lastOpenFiles": [
    "发布/项目开发/vue云笔记/手写Eventbus.md",
    "面试/手写代码系列/常见手写题/手写event-emit（发布订阅）.md",
    "发布/项目开发/vue云笔记/Avatar展示用户信息.md",
    "发布/项目开发/vue云笔记/使用axios+localStorage封装.md",
    "发布/项目开发/vue云笔记/deploy失效问题.md",
    "发布/项目开发/vue云笔记/vue $ref不生效问题.md",
    "面试/ajax/ajax.md",
    "发布/使用截图工具+图床+github实现截图自由.md",
    "发布/迭代器.md",
    "git/bu.md"
  ]
}